package gr.uoa.di.models;
// Generated Mar 29, 2016 1:43:54 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name = "item")
public class Item implements java.io.Serializable {

	private Integer itemId;
	private User user;
	private String name;
	private String description;
	private Integer buyPrice;
	private Integer currentBid;
	private Integer firstBid;
	private String location;
	private Float lat;
	private Float lon;
	private String country;
	private Date start;
	private Date end;
	private Set<Bid> bids = new HashSet<Bid>(0);
	private Set<ItemInCat> itemInCats = new HashSet<ItemInCat>(0);

	public Item() {
	}

	public Item(User user, String name, String description, Integer buyPrice, Integer currentBid, Integer firstBid, String location,
			Float lat, Float lon, String country, Date start, Date end, Set<Bid> bids, Set<ItemInCat> itemInCats) {
		this.user = user;
		this.name = name;
		this.description = description;
		this.buyPrice = buyPrice;
		this.currentBid = currentBid;
		this.firstBid = firstBid;
		this.location = location;
		this.lat = lat;
		this.lon = lon;
		this.country = country;
		this.start = start;
		this.end = end;
		this.bids = bids;
		this.itemInCats = itemInCats;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "item_id", unique = true, nullable = false)
	public Integer getItemId() {
		return this.itemId;
	}

	public void setItemId(Integer itemId) {
		this.itemId = itemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "name", length = 150)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "buy_price")
	public Integer getBuyPrice() {
		return this.buyPrice;
	}

	public void setBuyPrice(Integer buyPrice) {
		this.buyPrice = buyPrice;
	}

	@Column(name = "current_bid")
	public Integer getCurrentBid() {
		return this.currentBid;
	}

	public void setCurrentBid(Integer currentBid) {
		this.currentBid = currentBid;
	}

	@Column(name = "first_bid")
	public Integer getFirstBid() {
		return this.firstBid;
	}

	public void setFirstBid(Integer firstBid) {
		this.firstBid = firstBid;
	}

	@Column(name = "location", length = 150)
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "lat", precision = 12, scale = 0)
	public Float getLat() {
		return this.lat;
	}

	public void setLat(Float lat) {
		this.lat = lat;
	}

	@Column(name = "lon", precision = 12, scale = 0)
	public Float getLon() {
		return this.lon;
	}

	public void setLon(Float lon) {
		this.lon = lon;
	}

	@Column(name = "country", length = 45)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start", length = 0)
	public Date getStart() {
		return this.start;
	}

	public void setStart(Date start) {
		this.start = start;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end", length = 0)
	public Date getEnd() {
		return this.end;
	}

	public void setEnd(Date end) {
		this.end = end;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	public Set<Bid> getBids() {
		return this.bids;
	}

	public void setBids(Set<Bid> bids) {
		this.bids = bids;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	public Set<ItemInCat> getItemInCats() {
		return this.itemInCats;
	}

	public void setItemInCats(Set<ItemInCat> itemInCats) {
		this.itemInCats = itemInCats;
	}

}
